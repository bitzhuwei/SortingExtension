using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Collections;

namespace System
{
    public static partial class _HeapSort
    {
        /// <summary>
        /// 
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="arr"></param>
        private static void HeapSortDescending1<T>(this IList<T> arr)
            where T : IComparable
        {
			//TODO: Add implemention here

#if DEBUG
            arr.WriteList();
#endif
			throw new NotImplementedException();
        }
        /// <summary>
        /// 
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="arr"></param>
        private static void HeapSortAscending1<T>(this IList<T> arr)
            where T : IComparable
        {
			//TODO: Add implemention here

#if DEBUG
            arr.WriteList();
#endif
			throw new NotImplementedException();
        }

		private static void HeapSortDescending<T>(this IList<T> arr)
			where T : IComparable
		{
			HeapSortDescending1(arr);
		}
		private static void HeapSortAscending<T>(this IList<T> arr)
			where T : IComparable
		{
			HeapSortAscending1(arr);
		}
    }
}
